# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_bCvWYVtrCXW7LLYY0GDqLOMKhy0Zt51
"""

Autor: Gustavo Montes Machado
Data: 19/12/2020

"""# Teste de Python

##**Questão 1:**
 Fazer um algoritmo para me dizer quantos numeros pares, multiplos de 49 e múltiplos de 37(simultaneamente , ou seja, o numero de satisfazer essas 3 condiçoes)existem no intervao de 1 a 5.000.000(5 Milhões)

---
"""

n = 1                                               # variável dos numeros  ue irao cobrir o intervalo pedido                                             #variável que soma a
lista = []                                          # criando a lista que vai armazenar os numeros que satisfazem as condiçoes 
while n <= 5000000:                                 # Criando um loop que acabará quando o n receber um valor maior que 5 milhoes
  if n%2 ==0 and n%37 == 0 and n%49 == 0:           # testando se é par, se é divizivel por 37 e 49
        lista.append(n)                             # satsfazendo, adicionar o numero n à lista
                                     
  n = n+1                                           # aumentando o n para o proximo numero , retornando para o loop
    
print(str(len(lista)) )                             # usando o len pra contar os elementos da lista
#print(lista) para evitar sobrecarga nao executarei essa linha - exibindo a lista com todos os numeros

"""## **Questão 2:** 
Fazer um algoritmo para criar um vetor x com 10 posiçoes começando pelo zero. A construçao desse vetor dará pela seguinte maneira 

Sendo "$i$" a posição do elemento dentro desse vetor v.

Se a posiçao i for par, entao esse elemento na posição i do vetor x deverá ser alimentado da seguinte maneira



>$$ X[i] = 3^i + 7*(i!)$$

Lembrando que "$i!$" indica o fatorial da posição $i$

 Caso o $i$ seja um valor impar, então esse elemento na posicao $i$ do vetor x devera ser alimentado da seguinte maneira

>$$ X[i] = 2^i + 4*ln(i)$$

 Lembrando que "$ln(i)$" indica o logaritmo neperiano do número $i$

Alimentando esse vetor, deseja saber qual a **posição do maior elemento**  desse vetor e qual a **média dos elementos contidos nesse vetor(Arrednde o valor para 2 casas decimais)**. 


---





"""

import math as mt                                    # importando o math para usar as feraamentas de vetor a afins
i = 0                                                
v = []                                               # criando o vetor v
for i in range (10):                                 # criando um loop que acabará antes de chegar no 10(de zero até 9 somando 10 elementos)
    if i%2 == 0: 
      v.insert(i, 3**i + 7 * math.factorial(i))                                    # testando se a posiçao é par e sendo par, cria uma nova formula para posiçoes pares
    else:                                            # não sendo par, cria uma nova fórmula para elementos em posições ímpares
      v.insert(i, 2**i + 4 * mt.log(i))
    i = i + 1                                        # aumentando o i para o proximo numero , retornando para o loop
print("V =",v)                                       # Printando o vetor
print("\nA posição do maior elemento do vetor é: " + str(v.index(max(v))))
print("\nA média dos valores contidos nesse vetor é: " + str(round(sum(v)/len(v),2)))

"""## **Questão 3:** 
Fazer um algoritmo que leia a nota de 5 alunos e uma nota para cada aluno.Guarde essas informaçoes em um dcionário e depois apresente o **aluno com a maior nota** e a **sua respectiva nota**

---


"""

print("Caso necessário, separe as casas decimais utilizando ponto ao invés de vírgula!\nE nao deixe caixa de nota vazia!\n") # Ressalvas para o funcionamento pleno do codigo
notas = {
        str(input("Insira o nome do Aluno 1: ")): float(input("Insira a nota do Aluno 1: ")),
        str(input("\nInsira o nome do Aluno 2: ")): float(input("Insira a nota do Aluno 2: ")),
        str(input("\nInsira o nome do Aluno 3: ")): float(input("Insira a nota do Aluno 3: ")),
        str(input("\nInsira o nome do Aluno 4: ")): float(input("Insira a nota do Aluno 4: ")),
        str(input("\nInsira o nome do Aluno 5: ")): float(input("Insira a nota do Aluno 5: "))
}                                                                                                                      # criando o dicionario com os comandos para receber as entradas
   
# printando todos os resultados 
print("\nO aluno com maior nota foi: " + str(max(notas, key=notas.get)))#Aqui ele printa o que se pede, o nome e a respectiva nota do aluno com a nota mais alta dentre todos.
print("e sua nota foi: " + str(float(notas[max(notas, key=notas.get)])))
print("Notas = ",notas)